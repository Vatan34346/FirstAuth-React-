{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Front\\\\AuthWithReact\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\"; //function for reducer\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === \"User Input\") {\n    return {\n      value: action.val,\n      isValid: action.val.includes(\"@\")\n    };\n  }\n\n  if (action.type === \"Input blur\") {\n    return {\n      value: state.value,\n      isValid: state.value.includes(\"@\")\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"User Input\") {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n\n  if (action.type === \"Input blur\") {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false); //reducer\n\n  const [emailState, dispachEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: false\n  });\n  const [passState, dispachPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: false\n  }); //\n\n  useEffect;\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"Chekin\");\n      setFormIsValid(emailState.isValid && passState.isValid);\n    }, 5000);\n    return () => {\n      console.log(\"clean Up\"); // clean up function that runs every time sideEffect function exuctions\n\n      clearTimeout(identifier);\n    };\n  }, [enteredPassword, enteredEmail]);\n\n  const emailChangeHandler = event => {\n    dispachEmail({\n      type: \"User Input\",\n      val: event.target.value\n    }); //  setFormIsValid(event.target.value.includes('@')&&passState)\n  };\n\n  const passwordChangeHandler = event => {\n    dispachPassword({\n      type: 'User Input',\n      val: event.target.value\n    }); // setFormIsValid(event.target.value.trim().length > 6 && emailState.isValid);\n  };\n\n  const validateEmailHandler = () => {\n    dispachEmail({\n      type: \"Input blur\"\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispachPassword({\n      type: 'Input blur'\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passState.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passState.isValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"XnY3aoM6E+60xfgABeNKhgFT2Gk=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/User/Desktop/Front/AuthWithReact/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","Card","classes","Button","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","formIsValid","setFormIsValid","emailState","dispachEmail","passState","dispachPassword","identifier","setTimeout","console","log","clearTimeout","enteredPassword","enteredEmail","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\n\n//function for reducer\n\nconst emailReducer = (state, action) => {\n  if (action.type === \"User Input\") {\n    return { value: action.val, isValid: action.val.includes(\"@\") };\n  }\n\n  if (action.type === \"Input blur\") {\n    return { value: state.value, isValid: state.value.includes(\"@\") };\n  }\n\n  return { value: \"\", isValid: false };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"User Input\") {\n    return { value: action.val, isValid: action.val.trim().length > 6 };\n  }\n\n  if (action.type === \"Input blur\") {\n    return { value: state.value, isValid: state.value.trim().length > 6 };\n  }\n\n  return { value: \"\", isValid: false };\n};\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  //reducer\n  const [emailState, dispachEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: false,\n  });\n\n  const [passState, dispachPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: false,\n  });\n  //\n\n  useEffect\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"Chekin\");\n\n      setFormIsValid(\n        emailState.isValid && passState.isValid\n      );\n    }, 5000);\n\n    return () => {\n      console.log(\"clean Up\"); // clean up function that runs every time sideEffect function exuctions\n      clearTimeout(identifier);\n    };\n  }, [enteredPassword, enteredEmail]);\n\n  const emailChangeHandler = (event) => {\n    dispachEmail({ type: \"User Input\", val: event.target.value });\n\n\n  //  setFormIsValid(event.target.value.includes('@')&&passState)\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispachPassword({type:'User Input',val:event.target.value});\n\n   // setFormIsValid(event.target.value.trim().length > 6 && emailState.isValid);\n  };\n\n  const validateEmailHandler = () => {\n    dispachEmail({ type: \"Input blur\" });\n  };\n\n  const validatePasswordHandler = () => {\n  dispachPassword({type:'Input blur'})\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}